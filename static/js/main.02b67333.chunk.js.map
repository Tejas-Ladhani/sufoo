{"version":3,"sources":["assets/beach-radioo.jpg","assets/beach-radio.jpg","pages/Radio/index.js","components/RecipeTile/index.js","containers/recipe/index.js","containers/NavBar/index.js","containers/recipe-info/index.js","pages/RecipePage/index.js","App.js","reportWebVitals.js","index.js"],"names":["Radio","useState","stations","setStations","stationFilter","useEffect","setupApi","then","data","console","log","a","api","RadioBrowserApi","fetch","bind","window","searchStations","language","tag","limit","className","map","station","index","style","backgroundImage","favicon","name","src","urlResolved","showJumpControls","layout","customProgressBarSection","customControlsSection","autoPlayAfterSrcChange","RecipeTile","setselectedRecipe","onClick","alt","HealthLabelsConst","Recipe","query","setQuery","recipeArray","setRecipeArray","healthLabel","sethealthLabel","GetRecipe","Axios","get","result","hits","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","label","replace","Navbar","RecipeInfo","selectedRecipe","recipe","classList","contains","d","fontWeight","href","RecipePage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAAe,ICAA,I,aCQA,SAASA,IACtB,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,mBAAS,OAAnD,mBAAOG,EAAP,KACA,GADA,KACsBH,oBAAS,IAA/B,6BACAI,qBAAU,WACRC,EAASF,GAAeG,MAAK,SAACC,GAC5BC,QAAQC,IAAIF,GACZL,EAAYK,QAEb,CAACJ,IAEJ,IAAME,EAAQ,uCAAG,WAAOF,GAAP,iBAAAO,EAAA,6DACTC,EAAM,IAAIC,kBAAgBC,MAAMC,KAAKC,QAAS,gBADrC,SAGQJ,EACpBK,eAAe,CACdC,SAAU,UACVC,IAAKf,EACLgB,MAAO,KAERb,MAAK,SAACC,GACL,OAAOA,KAVI,cAGTN,EAHS,yBAaRA,GAbQ,2CAAH,sDAyCd,OACE,qBAAKmB,UAAU,QAAf,SAEE,qBAAKA,UAAU,WAAf,SACGnB,GACCA,EAASoB,KAAI,SAACC,EAASC,GACrB,OACE,sBAAKH,UAAU,UAAsBI,MAAO,CAACC,gBAAgB,OAAD,OAASH,EAAQI,QAAjB,MAA5D,UAEE,qBAAKN,UAAU,OAAf,SAAuBE,EAAQK,OAC/B,cAAC,IAAD,CACEP,UAAU,SACVQ,IAAKN,EAAQO,YACbC,kBAAkB,EAClBC,OAAO,UACPC,yBAA0B,GAC1BC,sBAAuB,CAAC,iBACxBC,wBAAwB,MAVEX,U,4CCjE7B,SAASY,EAAT,GAA+C,IAA1B5B,EAAyB,EAAzBA,KAAK6B,EAAoB,EAApBA,kBACvC,OACE,sBAAKhB,UAAU,aAAaiB,QAAS,kBAAID,EAAkB7B,IAA3D,UAEE,qBAAKqB,IAAKrB,EAAI,OAAJ,MAAyB+B,IAAK/B,EAAI,OAAJ,QACxC,uBACA,mBAAGa,UAAU,oBAAb,SAAkCb,EAAI,OAAJ,WCHxC,IAEMgC,EAAkB,CAAE,QAAS,aAAc,QAAS,aAAc,cAAe,aAAc,WAAY,YAAa,WAAY,cAAe,gBAAiB,WAAY,YAAa,kBAEpL,SAASC,EAAT,GAAsC,IAArBJ,EAAoB,EAApBA,kBAC5B,EAA0BpC,mBAAS,IAAnC,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAAsC1C,mBAAS,IAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KACA,EAAsC5C,mBAAS,IAA/C,mBAAO6C,EAAP,KAAoBC,EAApB,KAEMnC,EAAG,0CAAsC8B,EAAtC,mBATO,WASP,oBARQ,mCAQR,iBAGHM,EAAS,uCAAG,4BAAArC,EAAA,yDAEE,IAAbmC,EAFW,gCAGKG,IAAMC,IAAItC,GAHf,OAGVuC,EAHU,6CAKKF,IAAMC,IAAItC,EAAI,WAAD,OAAYkC,IAL9B,OAKVK,EALU,cAQdN,EAAeM,EAAO3C,KAAK4C,MAC3B3C,QAAQC,IAAIyC,GATE,4CAAH,qDAgBf,OACI,sBAAK9B,UAAU,oBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,yEAEJ,uBAAMA,UAAU,eAAegC,SATtB,SAACC,GACdA,EAAEC,iBACFP,KAOI,UACI,uBAAOQ,KAAK,OACRnC,UAAU,0BACVoC,YAAY,oBACZC,MAAOhB,EACPiB,SAAU,SAACL,GAAD,OAAOX,EAASW,EAAEM,OAAOF,UAEvC,uBAAOF,KAAK,SACRnC,UAAU,oBACVqC,MAAM,WACN,wBAAQrC,UAAU,qBAAlB,SACKmB,EAAkBlB,KAAI,SAACuC,GAAD,OAAS,wBAAQvB,QAAS,kBAAIS,EAAec,IAApC,SAAyDA,EAAMC,QAAQ,IAAI,MAA1BD,WAG7F,qBAAKxC,UAAU,0BAAf,SACI,qBAAKA,UAAU,qBAAf,SAEQuB,EAAYtB,KAAI,SAACd,GAAD,OAAU,cAAC4B,EAAD,CAAY5B,KAAMA,EAAM6B,kBAAmBA,GAAwB7B,EAAI,OAAJ,mB,OCrDtG,SAASuD,IAGpB,OACI,qBAAK1C,UAAU,SAAf,SACI,4C,OCCG,SAAS2C,EAAT,GAA4D,IAAtCC,EAAqC,EAArCA,eAAgB5B,EAAqB,EAArBA,kBAC3C6B,EAASD,EAAc,OAM7B,OACI,qBAAK5C,UAAU,WAAWiB,QANV,SAACgB,GAEbA,EAAEM,OAAOO,UAAUC,SAAS,aAC5B/B,EAAkB,OAGtB,SACI,qBAAKhB,UAAU,aAAf,SACI,gCACG,sBAAKA,UAAU,qBAAf,cAAqC,6BAAK6C,EAAM,QAAhD,OACA,uBACC,qBAAK7C,UAAU,6BAAf,SAA6C6C,EAAM,aAAiB5C,KAAI,SAAC+C,GAAD,OAAO,mBAAGhD,UAAU,yBAAb,SAAuCgD,EAAEP,QAAQ,IAAK,YACrI,sBAAKzC,UAAU,+BAAf,UACI,qBAAKQ,IAAKqC,EAAM,MAAW3B,IAAK2B,EAAM,QAEtC,gCACI,+CACCA,EAAM,YAAgB5C,KAAI,SAAC+C,GAAD,OAAO,8BAAG,uBAAM5C,MAAO,CAAE6C,WAAY,OAA3B,UAAqCD,EAAC,aAAtC,OAAgEA,EAAC,WACtG,4CAAeH,EAAM,SAArB,OAED,qBAAK7C,UAAU,WAAf,SAA0B,mBAAGkD,KAAML,EAAM,QAAa7C,UAAU,gBAAgBuC,OAAO,SAA7D,8BAIjC,8BC/BL,SAASY,IACpB,MAA4CvE,mBAAS,MAArD,mBAAOgE,EAAP,KAAuB5B,EAAvB,KACA,OACI,qCACA,cAACI,EAAD,CAAQJ,kBAAmBA,IACT,OAAjB4B,EAAsB,cAACD,EAAD,CAAYC,eAAgBA,EAAgB5B,kBAAmBA,IAAqB,gC,OCWpGoC,MAbf,WACE,OACE,eAAC,IAAD,WACM,cAAC,EAAD,IAEA,sBAAKpD,UAAU,MAAf,UACA,cAACrB,EAAD,IACA,cAACwE,EAAD,WCDKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.02b67333.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beach-radioo.de93ed56.jpg\";","export default __webpack_public_path__ + \"static/media/beach-radio.74ccd911.jpg\";","import React, { useEffect, useState } from \"react\";\nimport { RadioBrowserApi } from \"radio-browser-api\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport imageradio from \"../../assets/beach-radioo.jpg\";\nimport radioimg from \"../../assets/beach-radio.jpg\";\nimport \"./radio.css\";\n\nexport default function Radio() {\n  const [stations, setStations] = useState();\n  const [stationFilter, setStationFilter] = useState(\"all\");\n  const [img, setimg] = useState(true);\n  useEffect(() => {\n    setupApi(stationFilter).then((data) => {\n      console.log(data);\n      setStations(data);\n    });\n  }, [stationFilter]);\n\n  const setupApi = async (stationFilter) => {\n    const api = new RadioBrowserApi(fetch.bind(window), \"My Radio App\");\n\n    const stations = await api\n      .searchStations({\n        language: \"english\",\n        tag: stationFilter,\n        limit: 40,\n      })\n      .then((data) => {\n        return data;\n      });\n\n    return stations;\n  };\n\n  const filters = [\n    \"all\",\n    \"classical\",\n    \"country\",\n    \"dance\",\n    \"disco\",\n    \"house\",\n    \"jazz\",\n    \"pop\",\n    \"rap\",\n    \"retro\",\n    \"rock\",\n  ];\n\n  const setDefaultSrc = (event) => {\n    if (img) {\n      event.target.src = radioimg;\n      setimg(!img);\n    }\n    else{\n        event.target.src = imageradio;\n        setimg(!img);\n    }\n  };\n\n  return (\n    <div className=\"radio\">\n     \n      <div className=\"stations\">\n        {stations &&\n          stations.map((station, index) => {\n            return (  \n              <div className=\"station\" key={index} style={{backgroundImage: `url(${station.favicon})`}} >\n               \n                <div className=\"name\">{station.name}</div>\n                <AudioPlayer\n                  className=\"player\"\n                  src={station.urlResolved}\n                  showJumpControls={false}\n                  layout=\"stacked\"\n                  customProgressBarSection={[]}\n                  customControlsSection={[\"MAIN_CONTROLS\"]}\n                  autoPlayAfterSrcChange={true}\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n","import './style.css';\r\n\r\nexport default function RecipeTile({data,setselectedRecipe}) {\r\n  return (\r\n    <div className=\"RecipeTile\" onClick={()=>setselectedRecipe(data)} >\r\n     \r\n      <img src={data['recipe']['image']} alt={data['recipe']['label']} />\r\n      <hr></hr>\r\n      <p className=\"RecipeTile__label\">{data['recipe']['label']}</p>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import Axios from 'axios';\r\nimport './style.css';\r\nimport { useState } from 'react';\r\nimport { RecipeTile } from '../../components';\r\n\r\nconst YOUR_APP_ID = 'fbac213f'\r\nconst YOUR_APP_KEY = '2b70b7ade28eb92028b133437d957a6c'\r\nconst HealthLabelsConst=[ \"vegan\", \"vegetarian\", \"paleo\", \"dairy-free\", \"gluten-free\", \"wheat-free\", \"fat-free\", \"low-sugar\", \"egg-free\", \"peanut-free\", \"tree-nut-free\", \"soy-free\", \"fish-free\", \"shellfish-free\"]\r\n\r\nexport default function Recipe({setselectedRecipe}) {\r\n    const [query, setQuery] = useState('')\r\n    const [recipeArray, setRecipeArray] = useState([])\r\n    const [healthLabel, sethealthLabel] = useState('')\r\n\r\n    const api = `https://api.edamam.com/search?q=${query}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=20`\r\n    // const api=`https://api.edamam.com/search?q=${query}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free`\r\n\r\n    const GetRecipe = async () => {\r\n        let result;\r\n        if(healthLabel=='')\r\n            result = await Axios.get(api)\r\n        else\r\n            result = await Axios.get(api+`&health=${healthLabel}`)\r\n        \r\n\r\n        setRecipeArray(result.data.hits)\r\n        console.log(result)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        GetRecipe();\r\n    }\r\n    return (\r\n        <div className=\"Recipe__container\">\r\n            <div className=\"Recipe__Header\">\r\n                <h1>Let Search Some recipes ğŸŒ® </h1>\r\n            </div>\r\n            <form className=\"Recipe__Form\" onSubmit={onSubmit}>\r\n                <input type=\"text\"\r\n                    className=\"Recipe__Form__textfield\"\r\n                    placeholder=\"Enter Ingredients\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <input type=\"submit\"\r\n                    className=\"Recipe__submitBtn\"\r\n                    value=\"search\" />\r\n                    <select className=\"Recipe__HealthList\">\r\n                        {HealthLabelsConst.map((label)=><option onClick={()=>sethealthLabel(label)} key={label}>{label.replace('-',' ')}</option>)}\r\n                    </select>\r\n            </form>\r\n            <div className=\"Recipe_recipescontainer\">\r\n                <div className=\"Recipe_recipesGrid\">\r\n                    {\r\n                        recipeArray.map((data) => <RecipeTile data={data} setselectedRecipe={setselectedRecipe} key={data['recipe']['shareAs']}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './style.css'\r\n\r\nexport default function Navbar() {\r\n   \r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <p>SupFoodie</p>\r\n            \r\n\r\n        </div>\r\n    )\r\n}","/*\r\n    TEJAS LADHANI\r\n    13-06-2021\r\n    HACKATHON\r\n*/\r\n\r\nimport './style.css';\r\n\r\nexport default function RecipeInfo({ selectedRecipe, setselectedRecipe }) {\r\n    const recipe = selectedRecipe['recipe']\r\n    const handleClick = (e) => {\r\n        // when click on backdrop (ONLY), the popup should get close, that is by setting the selected values as null, [check the /container/recipe/index]\r\n        if (e.target.classList.contains('backdrop'))\r\n            setselectedRecipe(null)\r\n    }\r\n    return (\r\n        <div className=\"backdrop\" onClick={handleClick}>\r\n            <div className=\"RecipeInfo\">\r\n                <div>\r\n                   <div className=\"RecipeInfo_Heading\"> <h1>{recipe['label']}</h1> </div>\r\n                   <hr />\r\n                    <div className=\"RecipeInfo__labelcontainer\">{recipe['healthLabels'].map((d) => <p className=\"RecipeInfo__HealthTags\">{d.replace('-', ' ')}</p>)}</div>\r\n                    <div className=\"RecipeInfo__ImageInstruction\">\r\n                        <img src={recipe['image']} alt={recipe['label']} />\r\n\r\n                        <div>\r\n                            <h1>Ingredients :</h1>\r\n                            {recipe['ingredients'].map((d) => <p><span style={{ fontWeight: '600' }}>{d['foodCategory']} </span>{d['text']}</p>)}\r\n                            <p>calories : {recipe['calories']} </p>\r\n                            {/* <p>calories: {recipe['mealType'][0].map((d)=><span>{d}</span>)} </p> */}\r\n                           <div className=\"For_More\"><a href={recipe['shareAs']} className=\"For_More_link\" target=\"_blank\">For more</a></div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport { Recipe, RecipeInfo, } from '../../containers';\r\n\r\nexport default function RecipePage() {\r\n    const [selectedRecipe, setselectedRecipe] = useState(null);\r\n    return (\r\n        <>\r\n        <Recipe setselectedRecipe={setselectedRecipe}/>\r\n        {selectedRecipe!==null?<RecipeInfo selectedRecipe={selectedRecipe} setselectedRecipe={setselectedRecipe}/>:<></>}\r\n        </>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Radio from \"./pages/Radio/index\";\nimport { ChakraProvider,Box } from \"@chakra-ui/react\"\nimport { RecipePage } from './pages';\nimport { NavBar } from './containers';\nimport Music from './containers/Music/index.js';\nfunction App() {\n  return (\n    <ChakraProvider>\n          <NavBar />\n       \n          <div className=\"App\">\n          <Radio />\n          <RecipePage />\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}